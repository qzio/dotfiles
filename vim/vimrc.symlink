set nocompatible
filetype plugin indent on
syntax on
" setting light background works better with solarized theme.
"set background=dark
set background=light

set mouse=a
set mousef
set shiftwidth=2 softtabstop=2 tabstop=2
set expandtab 
set smartindent
set foldmethod=manual
set hlsearch
set encoding=utf8 fileencoding=utf8
set isk+=_,- " those chars is not word separators!
set autoindent
set ignorecase
set smartcase
set hidden
set laststatus=2
set number

" make 111 column a red bar
set textwidth=110
set colorcolumn=+1
" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
" for gvim
set guioptions-=T

" use php highlightning on .inc files
au BufEnter,BufRead,BufNewFile *.inc setf php
au BufEnter,BufRead,BufNewFile *.thor,Rakefile,*.rake,Capfile,*.ru setf ruby
au BufEnter,BufRead,BufNewFile *.less setf css
autocmd BufNewFile,BufRead *.json set ft=javascript
au BufEnter,BufRead,BufNewFile *.scss setf scss
au BufRead,BufNewFile *.handlebars,*.hbs set ft=html syntax=handlebars


" use 4 for indention in python files
au BufEnter,BufRead,BufNewFile *.* set shiftwidth=2 softtabstop=2 tabstop=2
au BufEnter,BufRead,BufNewFile *.py set shiftwidth=4 softtabstop=4 tabstop=4

" set leader key to ,
let mapleader=","

" map , t to ctrlp (fuzzy finder)
nmap <Leader>t :CtrlP<Cr>
nmap <Leader>b :CtrlPBuffer<Cr>

" map d to jump to definition
nmap <Leader>d <c-]>
nmap <Leader>f <c-o>


" Move faster between windows
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" show trailing whitespaces
set listchars=tab:\ \ ,trail:âœ–
set list

" no idea, but show the encoding in the status line.
if has("statusline")
 set statusline=%<%f\ %h%m%r%=%{\"[\".(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\").\"]\ \"}%k\ %-14.(%l,%c%V%)\ %P
endif

" fix pyflakes
highlight clear SpellBad
highlight SpellBad term=standout ctermfg=1 term=underline cterm=underline
highlight clear SpellCap
highlight SpellCap term=underline cterm=underline
highlight clear SpellRare
highlight SpellRare term=underline cterm=underline
highlight clear SpellLocal
highlight SpellLocal term=underline cterm=underline

" syntastic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
"
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
function! ToggleErrors()
    if empty(filter(tabpagebuflist(), 'getbufvar(v:val, "&buftype") is# "quickfix"'))
         " No location/quickfix list shown, open syntastic error location panel
         Errors
    else
        lclose
    endif
endfunction
nnoremap <silent> <Leader>e :<C-u>call ToggleErrors()<CR>
